var filename='lib/QollRegEx.js';

QollRegEx = {
	num 		: /^[\d.,]+$/,
	txt			: /^\s*([Tt]ext|[Tt]xt)\s*[:=-]*\s+/, ///^[\w\s.,:;"'=-_\\\(\)\[\]\{\}\^&#!@$*<>]+$/,
	qoll 		: /^\s*#\s*/,
	answer 		: /^\s*([Aa]nswer|[Aa]ns|\(a\))\s*[:=-]*\s+/,
	abb_ans		: /^[A-Za-z\d]{1}$/i,
	//qollTxt 	: /^[#\s]+(.*)/gm,
	hint 		: /^\s*([Hh]int\s*)[:=-]*\s+/,
	//hintTxt 	: /^[\s]*[Hh]int[:=-\s]*(.*)/,
	note 		: /^\s*([Nn]ote\s*)[:=-]*\s*/,
	unit 		: /^\s*([Uu]nit[s]*\s*)[:=-]*\s+/,
	//noteTxt 	: /^[\s]*[Nn]ote[:=-\s]*(.*)/,
	fib_replace : /_([A-Za-z,0-9\{\}\(\)\[\]\s\?=\.\^\&\*\-\!\%$#+<>~`|:;,'"]*)_/, //replace it one by one
	fib 		: /_([A-Za-z,0-9\{\}\(\)\[\]\s\?=\.\^\&\*\-\!\%$#+<>~`|:;,'"]*)_/g,
	fib_transf	: /\{\d{1,2}\}/,
	//fibTxt 		: /\\_(.+)\\_/,
	opt 		: /^-[?=Aa]{0,1}[\s]*/,
	gen_opt 	: /^((\d+\.)|(\([A-za-z]{1})\)|(\(\d+\)))|[-\*]{1}\s+/,
	//optTxt 		: /^-[?=Aa]{0,1}[\s]*(.+)/,
	qollMaster 	: /^#\s(.*)/m,
	isNum		: function(text){return text.match(QollRegEx.num);},
	isTxt		: function(text){return text.match(QollRegEx.txt);},
	isQoll		: function(text){return text.match(QollRegEx.qoll);},
	isHint		: function(text){return text.match(QollRegEx.hint);},
	isNote		: function(text){return text.match(QollRegEx.note);},
	isFib		: function(text){return text.match(QollRegEx.fib);},
	isOpt		: function(text){return text.match(QollRegEx.opt);},
	parseQollTxt	: function(text) {return text.split(QollRegEx.qollTxt);},
	parseHintTxt	: function(text) {return text.match(QollRegEx.hintTxt);},
	parseNoteTxt	: function(text) {return text.match(QollRegEx.noteTxt);},
	parseFibTxt		: function(text) {return text.match(QollRegEx.fibTxt);},
	parseOptTxt		: function(text) {return text.match(QollRegEx.optTxt);},
	parseQollMaster	: function(text) {return text.match(QollRegEx.qollMaster);},
};